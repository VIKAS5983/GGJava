package gg.rearrangement;

import java.util.Arrays;

import gg.Utils.ArrayUtils;
import gg.rotation.rotateArray;

public class RearrangementIndex {
	public static void main(String args[]){

		int[] arr2={-1,-1,6,1,9,3,2,-1,4,-1};
		int[] arr={19, 7, 0, 3, 18, 15, 12, 6, 1, 8,
	              11, 10, 9, 5, 13, 16, 2, 14, 17, 4};
		ArrayUtils.printArray(arr);		
			ReArrange(arr);
		ArrayUtils.printArray(arr);
		reverseArray(arr);
		ArrayUtils.printArray(arr);

	}

	//Rearrange an array such that arr[i] = i
	public static void ReArrange(int[] arr){
		for(int i=0;i<arr.length;i++){
			if(arr[i]==-1 || arr[i]==i){
				continue;
			}
			int temp=arr[i];
			arr[i]=-1;
			
			while(temp!=-1 && arr[temp]!=temp){
			int temp2=arr[temp];
			arr[temp]=temp;
			temp=temp2;
			}
		}
	}
	
	
	public static void reverseArray(int[] arr){
		int n= arr.length;
		for(int i=0;i<n/2;i++)
		{
			int temp=arr[i];
			arr[i]=arr[n-i-1];
			arr[n-i-1]=temp;
		}
	}
	
//	Rearrange array such that arr[i] >= arr[j] if i is even and arr[i]<=arr[j] if i is odd and j < i

	public static void rearrangeInEvenAndOdd(int[] arr){
		Arrays.sort(arr);
		rearrangeInEvenAndOddUtil(arr);
	}
	public static void rearrangeInEvenAndOddUtil(int[] arr){
		int n=arr.length;
		int[] copy=new int[n];
		int j=0;
		
		for(int i=n - 1;i>=0;i--){
			if((i+1)%2==0)
				copy[i]	= array[end--];
			else copy[i] = array[start++];
		}
	}
}
